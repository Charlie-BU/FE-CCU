{"version":3,"file":"timeFormat.js","sources":["uni_modules/vk-uview-ui/libs/function/timeFormat.js"],"sourcesContent":["// padStart 的 polyfill，因为某些机型或情况，还无法支持es7的padStart，比如电脑版的微信小程序\n// 所以这里做一个兼容polyfill的兼容处理\nif (!String.prototype.padStart) {\n\t// 为了方便表示这里 fillString 用了ES6 的默认参数，不影响理解\n\tString.prototype.padStart = function(maxLength, fillString = ' ') {\n\t\tif (Object.prototype.toString.call(fillString) !== \"[object String]\") throw new TypeError(\n\t\t\t'fillString must be String')\n\t\tlet str = this\n\t\t// 返回 String(str) 这里是为了使返回的值是字符串字面量，在控制台中更符合直觉\n\t\tif (str.length >= maxLength) return String(str)\n\n\t\tlet fillLength = maxLength - str.length,\n\t\t\ttimes = Math.ceil(fillLength / fillString.length)\n\t\twhile (times >>= 1) {\n\t\t\tfillString += fillString\n\t\t\tif (times === 1) {\n\t\t\t\tfillString += fillString\n\t\t\t}\n\t\t}\n\t\treturn fillString.slice(0, fillLength) + str;\n\t}\n}\n\n// 其他更多是格式化有如下:\n// yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合\nfunction timeFormat(dateTime = null, fmt = 'yyyy-mm-dd') {\n\t// 如果为null,则格式化当前时间\n\tif (!dateTime) dateTime = Number(new Date());\n\t// 如果dateTime长度为10或者13，则为秒和毫秒的时间戳，如果超过13位，则为其他的时间格式\n\tif (dateTime.toString().length == 10) dateTime *= 1000;\n\tlet date = new Date(dateTime);\n\tlet ret;\n\tlet opt = {\n\t\t\"y+\": date.getFullYear().toString(), // 年\n\t\t\"m+\": (date.getMonth() + 1).toString(), // 月\n\t\t\"d+\": date.getDate().toString(), // 日\n\t\t\"h+\": date.getHours().toString(), // 时\n\t\t\"M+\": date.getMinutes().toString(), // 分\n\t\t\"s+\": date.getSeconds().toString() // 秒\n\t\t// 有其他格式化字符需求可以继续添加，必须转化成字符串\n\t};\n\tfor (let k in opt) {\n\t\tret = new RegExp(\"(\" + k + \")\").exec(fmt);\n\t\tif (ret) {\n\t\t\tfmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\n\t\t};\n\t};\n\treturn fmt;\n}\n\nexport default timeFormat\n"],"names":[],"mappings":";AAEA,IAAI,CAAC,OAAO,UAAU,UAAU;AAE/B,SAAO,UAAU,WAAW,SAAS,WAAW,aAAa,KAAK;AACjE,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,MAAM;AAAmB,YAAM,IAAI;AAAA,QAC/E;AAAA,MAA2B;AAC5B,QAAI,MAAM;AAEV,QAAI,IAAI,UAAU;AAAW,aAAO,OAAO,GAAG;AAE9C,QAAI,aAAa,YAAY,IAAI,QAChC,QAAQ,KAAK,KAAK,aAAa,WAAW,MAAM;AACjD,WAAO,UAAU,GAAG;AACnB,oBAAc;AACd,UAAI,UAAU,GAAG;AAChB,sBAAc;AAAA,MACd;AAAA,IACD;AACD,WAAO,WAAW,MAAM,GAAG,UAAU,IAAI;AAAA,EACzC;AACF;AAIA,SAAS,WAAW,WAAW,MAAM,MAAM,cAAc;AAExD,MAAI,CAAC;AAAU,eAAW,OAAO,oBAAI,KAAM,CAAA;AAE3C,MAAI,SAAS,SAAU,EAAC,UAAU;AAAI,gBAAY;AAClD,MAAI,OAAO,IAAI,KAAK,QAAQ;AAC5B,MAAI;AACJ,MAAI,MAAM;AAAA,IACT,MAAM,KAAK,YAAa,EAAC,SAAU;AAAA;AAAA,IACnC,OAAO,KAAK,SAAQ,IAAK,GAAG,SAAU;AAAA;AAAA,IACtC,MAAM,KAAK,QAAS,EAAC,SAAU;AAAA;AAAA,IAC/B,MAAM,KAAK,SAAU,EAAC,SAAU;AAAA;AAAA,IAChC,MAAM,KAAK,WAAY,EAAC,SAAU;AAAA;AAAA,IAClC,MAAM,KAAK,WAAY,EAAC,SAAU;AAAA;AAAA;AAAA,EAEpC;AACC,WAAS,KAAK,KAAK;AAClB,UAAM,IAAI,OAAO,MAAM,IAAI,GAAG,EAAE,KAAK,GAAG;AACxC,QAAI,KAAK;AACR,YAAM,IAAI,QAAQ,IAAI,CAAC,GAAI,IAAI,CAAC,EAAE,UAAU,IAAM,IAAI,CAAC,IAAM,IAAI,CAAC,EAAE,SAAS,IAAI,CAAC,EAAE,QAAQ,GAAG,CAAE;AAAA,IACpG;AAAA,EAEA;AAAC,SAAO;AACR;;"}