{"version":3,"file":"route.js","sources":["uni_modules/vk-uview-ui/libs/function/route.js"],"sourcesContent":["/**\n * 路由跳转方法，该方法相对于直接使用uni.xxx的好处是使用更加简单快捷\n * 并且带有路由拦截功能\n */\n\nclass Router {\n\tconstructor() {\n\t\t// 原始属性定义\n\t\tthis.config = {\n\t\t\ttype: 'navigateTo',\n\t\t\turl: '',\n\t\t\tdelta: 1, // navigateBack页面后退时,回退的层数\n\t\t\tparams: {}, // 传递的参数\n\t\t\tanimationType: 'pop-in', // 窗口动画,只在APP有效\n\t\t\tanimationDuration: 300, // 窗口动画持续时间,单位毫秒,只在APP有效\n\t\t\tintercept: false, // 是否需要拦截\n\t\t}\n\t\t// 因为route方法是需要对外赋值给另外的对象使用，同时route内部有使用this，会导致route失去上下文\n\t\t// 这里在构造函数中进行this绑定\n\t\tthis.route = this.route.bind(this)\n\t}\n\n\t// 判断url前面是否有\"/\"，如果没有则加上，否则无法跳转\n\taddRootPath(url) {\n\t\treturn url[0] === '/' ? url : `/${url}`\n\t}\n\n\t// 整合路由参数\n\tmixinParam(url, params) {\n\t\turl = url && this.addRootPath(url)\n\t\t\n\t\t// 使用正则匹配，主要依据是判断是否有\"/\",\"?\",\"=\"等，如“/page/index/index?name=mary\"\n\t\t// 如果有url中有get参数，转换后无需带上\"?\"\n\t\tlet query = ''\n\t\tif (/.*\\/.*\\?.*=.*/.test(url)) {\n\t\t\t// object对象转为get类型的参数\n\t\t\tquery = uni.$u.queryParams(params, false);\n\t\t\t// 因为已有get参数,所以后面拼接的参数需要带上\"&\"隔开\n\t\t\treturn url += \"&\" + query\n\t\t} else {\n\t\t\t// 直接拼接参数，因为此处url中没有后面的query参数，也就没有\"?/&\"之类的符号\n\t\t\tquery = uni.$u.queryParams(params);\n\t\t\treturn url += query\n\t\t}\n\t}\n\n\t// 对外的方法名称\n\tasync route(options = {}, params = {}) {\n\t\t// 合并用户的配置和内部的默认配置\n\t\tlet mergeConfig = {}\n\n\t\tif (typeof options === 'string') {\n\t\t\t// 如果options为字符串，则为route(url, params)的形式\n\t\t\tmergeConfig.url = this.mixinParam(options, params)\n\t\t\tmergeConfig.type = 'navigateTo'\n\t\t} else {\n\t\t\tmergeConfig = uni.$u.deepClone(options, this.config)\n\t\t\t// 否则正常使用mergeConfig中的url和params进行拼接\n\t\t\tmergeConfig.url = this.mixinParam(options.url, options.params)\n\t\t}\n\t\t\n\t\tif(params.intercept) {\n\t\t\tthis.config.intercept = params.intercept\n\t\t}\n\t\t// params参数也带给拦截器\n\t\tmergeConfig.params = params\n\t\t// 合并内外部参数\n\t\tmergeConfig = uni.$u.deepMerge(this.config, mergeConfig)\n\t\t// 判断用户是否定义了拦截器\n\t\tif (typeof uni.$u.routeIntercept === 'function') {\n\t\t\t// 定一个promise，根据用户执行resolve(true)或者resolve(false)来决定是否进行路由跳转\n\t\t\tconst isNext = await new Promise((resolve, reject) => {\n\t\t\t\tuni.$u.routeIntercept(mergeConfig, resolve)\n\t\t\t})\n\t\t\t// 如果isNext为true，则执行路由跳转\n\t\t\tisNext && this.openPage(mergeConfig)\n\t\t} else {\n\t\t\tthis.openPage(mergeConfig)\n\t\t}\n\t}\n\n\t// 执行路由跳转\n\topenPage(config) {\n\t\t// 解构参数\n\t\tconst {\n\t\t\turl,\n\t\t\ttype,\n\t\t\tdelta,\n\t\t\tanimationType,\n\t\t\tanimationDuration\n\t\t} = config\n\t\tif (config.type == 'navigateTo' || config.type == 'to') {\n\t\t\tuni.navigateTo({\n\t\t\t\turl,\n\t\t\t\tanimationType,\n\t\t\t\tanimationDuration\n\t\t\t});\n\t\t}\n\t\tif (config.type == 'redirectTo' || config.type == 'redirect') {\n\t\t\tuni.redirectTo({\n\t\t\t\turl\n\t\t\t});\n\t\t}\n\t\tif (config.type == 'switchTab' || config.type == 'tab') {\n\t\t\tuni.switchTab({\n\t\t\t\turl\n\t\t\t});\n\t\t}\n\t\tif (config.type == 'reLaunch' || config.type == 'launch') {\n\t\t\tuni.reLaunch({\n\t\t\t\turl\n\t\t\t});\n\t\t}\n\t\tif (config.type == 'navigateBack' || config.type == 'back') {\n\t\t\tuni.navigateBack({\n\t\t\t\tdelta\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default (new Router()).route"],"names":["uni"],"mappings":";;AAKA,MAAM,OAAO;AAAA,EACZ,cAAc;AAEb,SAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,KAAK;AAAA,MACL,OAAO;AAAA;AAAA,MACP,QAAQ,CAAE;AAAA;AAAA,MACV,eAAe;AAAA;AAAA,MACf,mBAAmB;AAAA;AAAA,MACnB,WAAW;AAAA;AAAA,IACX;AAGD,SAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AAAA,EACjC;AAAA;AAAA,EAGD,YAAY,KAAK;AAChB,WAAO,IAAI,CAAC,MAAM,MAAM,MAAM,IAAI,GAAG;AAAA,EACrC;AAAA;AAAA,EAGD,WAAW,KAAK,QAAQ;AACvB,UAAM,OAAO,KAAK,YAAY,GAAG;AAIjC,QAAI,QAAQ;AACZ,QAAI,gBAAgB,KAAK,GAAG,GAAG;AAE9B,cAAQA,cAAG,MAAC,GAAG,YAAY,QAAQ,KAAK;AAExC,aAAO,OAAO,MAAM;AAAA,IACvB,OAAS;AAEN,cAAQA,cAAAA,MAAI,GAAG,YAAY,MAAM;AACjC,aAAO,OAAO;AAAA,IACd;AAAA,EACD;AAAA;AAAA,EAGD,MAAM,MAAM,UAAU,IAAI,SAAS,CAAA,GAAI;AAEtC,QAAI,cAAc,CAAE;AAEpB,QAAI,OAAO,YAAY,UAAU;AAEhC,kBAAY,MAAM,KAAK,WAAW,SAAS,MAAM;AACjD,kBAAY,OAAO;AAAA,IACtB,OAAS;AACN,oBAAcA,cAAG,MAAC,GAAG,UAAU,SAAS,KAAK,MAAM;AAEnD,kBAAY,MAAM,KAAK,WAAW,QAAQ,KAAK,QAAQ,MAAM;AAAA,IAC7D;AAED,QAAG,OAAO,WAAW;AACpB,WAAK,OAAO,YAAY,OAAO;AAAA,IAC/B;AAED,gBAAY,SAAS;AAErB,kBAAcA,cAAG,MAAC,GAAG,UAAU,KAAK,QAAQ,WAAW;AAEvD,QAAI,OAAOA,cAAG,MAAC,GAAG,mBAAmB,YAAY;AAEhD,YAAM,SAAS,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACrDA,sBAAAA,MAAI,GAAG,eAAe,aAAa,OAAO;AAAA,MAC9C,CAAI;AAED,gBAAU,KAAK,SAAS,WAAW;AAAA,IACtC,OAAS;AACN,WAAK,SAAS,WAAW;AAAA,IACzB;AAAA,EACD;AAAA;AAAA,EAGD,SAAS,QAAQ;AAEhB,UAAM;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACH,IAAM;AACJ,QAAI,OAAO,QAAQ,gBAAgB,OAAO,QAAQ,MAAM;AACvDA,oBAAAA,MAAI,WAAW;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAI;AAAA,IACD;AACD,QAAI,OAAO,QAAQ,gBAAgB,OAAO,QAAQ,YAAY;AAC7DA,oBAAAA,MAAI,WAAW;AAAA,QACd;AAAA,MACJ,CAAI;AAAA,IACD;AACD,QAAI,OAAO,QAAQ,eAAe,OAAO,QAAQ,OAAO;AACvDA,oBAAAA,MAAI,UAAU;AAAA,QACb;AAAA,MACJ,CAAI;AAAA,IACD;AACD,QAAI,OAAO,QAAQ,cAAc,OAAO,QAAQ,UAAU;AACzDA,oBAAAA,MAAI,SAAS;AAAA,QACZ;AAAA,MACJ,CAAI;AAAA,IACD;AACD,QAAI,OAAO,QAAQ,kBAAkB,OAAO,QAAQ,QAAQ;AAC3DA,oBAAAA,MAAI,aAAa;AAAA,QAChB;AAAA,MACJ,CAAI;AAAA,IACD;AAAA,EACD;AACF;AAEA,MAAA,QAAgB,IAAI,OAAM,EAAI;;"}