{"version":3,"file":"debounce.js","sources":["uni_modules/vk-uview-ui/libs/function/debounce.js"],"sourcesContent":["let timeout = null;\n\n/**\n * 防抖原理：一定时间内，只有最后一次操作，再过wait毫秒后才执行函数\n * \n * @param {Function} func 要执行的回调函数 \n * @param {Number} wait 延时的时间\n * @param {Boolean} immediate 是否立即执行 \n * @return null\n */\nfunction debounce(func, wait = 500, immediate = false) {\n\t// 清除定时器\n\tif (timeout !== null) clearTimeout(timeout);\n\t// 立即执行，此类情况一般用不到\n\tif (immediate) {\n\t\tvar callNow = !timeout;\n\t\ttimeout = setTimeout(() => {\n\t\t\ttimeout = null;\n\t\t}, wait);\n\t\tif (callNow) typeof func === 'function' && func();\n\t} else {\n\t\t// 设置定时器，当最后一次操作后，timeout不会再被清除，所以在延时wait毫秒后执行func回调方法\n\t\ttimeout = setTimeout(() => {\n\t\t\ttypeof func === 'function' && func();\n\t\t}, wait);\n\t}\n}\n\nexport default debounce\n"],"names":[],"mappings":";AAAA,IAAI,UAAU;AAUd,SAAS,SAAS,MAAM,OAAO,KAAK,YAAY,OAAO;AAEtD,MAAI,YAAY;AAAM,iBAAa,OAAO;AAE1C,MAAI,WAAW;AACd,QAAI,UAAU,CAAC;AACf,cAAU,WAAW,MAAM;AAC1B,gBAAU;AAAA,IACV,GAAE,IAAI;AACP,QAAI;AAAS,aAAO,SAAS,cAAc,KAAI;AAAA,EACjD,OAAQ;AAEN,cAAU,WAAW,MAAM;AAC1B,aAAO,SAAS,cAAc;IAC9B,GAAE,IAAI;AAAA,EACP;AACF;;"}