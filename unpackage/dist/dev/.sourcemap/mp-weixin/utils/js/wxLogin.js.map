{"version":3,"file":"wxLogin.js","sources":["utils/js/wxLogin.js"],"sourcesContent":["import { uniRequest } from \"@/utils/js/api.js\";\nimport * as utils from \"@/utils/js/utils.js\";\n\nconst getTempCode = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tuni.login({\n\t\t\tprovider: \"weixin\",\n\t\t\tonlyAuthorize: true,\n\t\t\tsuccess: (res) => {\n\t\t\t\tif (res) resolve(res);\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"openid获取失败\");\n\t\t\t\t\treject(res);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfail: (e) => {\n\t\t\t\tconsole.log(\"openid获取失败\");\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const getOpenidAndSessionKey = async () => {\n\tconst response = await getTempCode();\n\tif (response.code) {\n\t\tconst res = await uniRequest(\"POST\", \"user\", \"/getOpenidAndSessionKey\", { tempCode: response.code });\n\t\tconsole.log(res.message);\n\t\tif (res.status !== 200) {\n\t\t\treturn null;\n\t\t}\n\t\treturn [res.openid, res.session_key];\n\t}\n\treturn null;\n};\n\n// export function wxLogin() {\n// \tgetOpenidAndSessionKey((openid) => {\n// \t\tif (openid) {\n// \t\t\tuniRequest(\n// \t\t\t\t\"POST\",\n// \t\t\t\t\"wxLogin\",\n// \t\t\t\t{\n// \t\t\t\t\topen_id: openid\n// \t\t\t\t},\n// \t\t\t\t\"user\",\n// \t\t\t\t(res) => {\n// \t\t\t\t\t// 登录成功\n// \t\t\t\t\tif (res.data.status == 200) {\n// \t\t\t\t\t\twx.showToast({\n// \t\t\t\t\t\t\ttitle: res.data.message,\n// \t\t\t\t\t\t\ticon: \"none\",\n// \t\t\t\t\t\t\tduration: 700\n// \t\t\t\t\t\t});\n// uni.setStorageSync(\"user_token\", res.data.user_token);\n// \t\t\t\t\t\tvar user_token = res.data.user_token;\n// \t\t\t\t\t\t// 异步获取用户信息\n// \t\t\t\t\t\tfunction asyncTask(callback) {\n// \t\t\t\t\t\t\tvar user_id = utils.get_user_info(user_token)[0];\n// \t\t\t\t\t\t\tutils.get_my_rank(user_id);\n// \t\t\t\t\t\t\tcallback();\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tasyncTask(() => {\n// \t\t\t\t\t\t\tconsole.log(\"async task finished\");\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\t// -----异步进程结束-----\n\n// \t\t\t\t\t\tsetTimeout(() => {\n// \t\t\t\t\t\t\tuni.reLaunch({\n// \t\t\t\t\t\t\t\turl: \"/pages/index/index\"\n// \t\t\t\t\t\t\t});\n// \t\t\t\t\t\t}, 700);\n// \t\t\t\t\t}\n// \t\t\t\t\t// 微信未被绑定\n// \t\t\t\t\telse {\n// \t\t\t\t\t\twx.showModal({\n// \t\t\t\t\t\t\ttitle: res.data.message,\n// \t\t\t\t\t\t\tcontent: \"是否前往绑定微信？\",\n// \t\t\t\t\t\t\tcallback: (res) => {\n// \t\t\t\t\t\t\t\tif (res.confirm) {\n// \t\t\t\t\t\t\t\t\tuni.navigateTo({\n// \t\t\t\t\t\t\t\t\t\turl: \"/pages/login/wx-bind\"\n// \t\t\t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t});\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t);\n// \t\t} else {\n// \t\t\twx.showToast({\n// \t\t\t\ttitle: \"登录失败，请换其他方式登录\",\n// \t\t\t\ticon: \"none\",\n// \t\t\t\tduration: 700\n// \t\t\t});\n// \t\t}\n// \t});\n// }\n"],"names":["uni","uniRequest"],"mappings":";;;AAGA,MAAM,cAAc,MAAM;AACzB,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvCA,kBAAAA,MAAI,MAAM;AAAA,MACT,UAAU;AAAA,MACV,eAAe;AAAA,MACf,SAAS,CAAC,QAAQ;AACjB,YAAI;AAAK,kBAAQ,GAAG;AAAA,aACf;AACJA,wBAAAA,MAAY,MAAA,OAAA,6BAAA,YAAY;AACxB,iBAAO,GAAG;AAAA,QACV;AAAA,MACD;AAAA,MACD,MAAM,CAAC,MAAM;AACZA,sBAAAA,MAAY,MAAA,OAAA,6BAAA,YAAY;AACxB,eAAO,CAAC;AAAA,MACR;AAAA,IACJ,CAAG;AAAA,EACH,CAAE;AACF;AAEY,MAAC,yBAAyB,YAAY;AACjD,QAAM,WAAW,MAAM;AACvB,MAAI,SAAS,MAAM;AAClB,UAAM,MAAM,MAAMC,wBAAW,QAAQ,QAAQ,2BAA2B,EAAE,UAAU,SAAS,KAAI,CAAE;AACnGD,kBAAA,MAAA,MAAA,OAAA,6BAAY,IAAI,OAAO;AACvB,QAAI,IAAI,WAAW,KAAK;AACvB,aAAO;AAAA,IACP;AACD,WAAO,CAAC,IAAI,QAAQ,IAAI,WAAW;AAAA,EACnC;AACD,SAAO;AACR;;"}